"use strict";
/**
 * CrÃ©e une fonction pickReviewer qui prend en paramÃ¨tre un tableau d'objets students pour dÃ©signer alÃ©atoirement un Ã©lÃ¨ve chargÃ© de corriger un exercice.
Ton objectif est de faire en sorte qu'un Ã©lÃ¨ve ne puisse pas Ãªtre dÃ©signÃ© deux fois avant que tous les autres aient Ã©tÃ© choisis au moins une fois.
Tu peux utiliser ce tableau pour tester ta fonction :
 */
let eleves = [
    { name: "Alice", hasReviewed: false },
    { name: "Bob", hasReviewed: false },
    { name: "Charlie", hasReviewed: false },
    { name: "David", hasReviewed: false },
];
const pickReviewer = (eleves) => {
    // Check if eleves ont deja corriger
    const allReviewed = eleves.every((e) => !e.hasReviewed);
    // Remettre Ã  false si tout le monde Ã  corriger
    if (allReviewed) {
        eleves.forEach((e) => (e.hasReviewed = false));
    }
    // Filtrer les eleves n'ayant pas corrigÃ©
    const availableEleves = eleves.filter((e) => !e.hasReviewed);
    console.log(availableEleves);
    // Si tout les eleves sont false, faire en random
    const randomEleves = Math.floor(Math.random() * availableEleves.length);
    const selectEleve = availableEleves[randomEleves];
    selectEleve.hasReviewed = true;
    return selectEleve.name;
};
for (let i = 0; i < 5; i++) {
    console.log(pickReviewer(eleves));
}
/**
 * Very first Wake Up Kata la team ðŸŽ‰
Le but va Ãªtre d'Ã©crire une fonction JavaScript que tu vas nommer filterByTitle, qui prend en paramÃ¨tre un tableau d'objets movies et une chaÃ®ne de caractÃ¨res searchedTitle .
Cette fonction doit retourner un nouveau tableau contenant uniquement les objets dont la propriÃ©tÃ© title contient la chaÃ®ne de caractÃ¨res searchedTitle spÃ©cifiÃ©e en paramÃ¨tre ET doit Ãªtre insensible Ã  la casse.
Tu pourras tester ta fonction sur ce tableau :
 */
// const recentMovies = [
//   {
//     title: "The Great Adventure",
//     releaseDate: "2023-07-15",
//     actors: ["Alex Johnson", "Samantha Bloom", "Michael Cane"],
//   },
//   {
//     title: "Lost in Time",
//     releaseDate: "2023-05-22",
//     actors: ["Clara Hughes", "Robert Smith", "Emily Stone"],
//   },
//   {
//     title: "Mystery of the Blue Ocean",
//     releaseDate: "2023-08-30",
//     actors: ["Henry Gold", "Natalie Port", "Bruce Wayne"],
//   },
//   {
//     title: "Cybernetic",
//     releaseDate: "2023-09-12",
//     actors: ["Aaron Stark", "Lisa Ray", "Jeremy Irons"],
//   },
//   {
//     title: "The Hidden World",
//     releaseDate: "2023-10-05",
//     actors: ["Sophia Loren", "Daniel Craig", "Emma Watson"],
//   },
// ];
// interface Movies {
//   title: string;
//   releaseDate: string;
//   actors: string[];
// }
// const filterByTitle = (movies: Movies[], searchedTitle: string) => {
//   const title = movies.filter((movie) =>
//     movie.title.toLowerCase().includes(searchedTitle.toLowerCase())
//   );
//   return title;
// };
// console.log(filterByTitle(recentMovies, "hidden"));
